{"version":3,"file":"static/js/649.7d0d7456.chunk.js","mappings":"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","sources":["components/RegisterForm/RegisterForm.styled.js","components/RegisterForm/RegisterForm.jsx","pages/Register.jsx","pages/pages.styled.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const SectionFormInput = styled.div`\n  padding-top: 20px;\n  padding-bottom: 20px;\n  background-color: #ebdf02;\n  border-radius: 4px;\n  font-family: Roboto;\n`;\n\nexport const Form = styled.form`\n  display: flex;\n  flex-direction: column;\n  gap: 8px;\n`;\n\nexport const LableInput = styled.label`\n  max-width: 200px;\n  margin-left: auto;\n  margin-right: auto;\n`;\nexport const LableInputWrapper = styled.div`\n  position: relative;\n  display: flex;\n`;\n\nexport const Input = styled.input`\n  &:focus {\n    outline: none;\n    border: 2px solid #53aecf;\n    border-radius: 2px;\n  }\n`;\nexport const SubmitBtn = styled.button`\n  width: 100px;\n  margin-left: auto;\n  margin-right: auto;\n  padding-top: 5px;\n  padding-bottom: 5px;\n\n  border: none;\n  border-radius: 4px;\n  cursor: pointer;\n  background-color: #53aecf;\n  scale: 1;\n  transition: background-color 250ms linear;\n  transition: scale 250ms linear;\n\n  font-size: 12px;\n  &:hover {\n    background-color: #42b9d4;\n    scale: 1.1;\n  }\n`;\nexport const VisibleBtn = styled.button`\n  margin-left: 2px;\n  border: none;\n  border-radius: 4px;\n  cursor: pointer;\n  background-color: #53aecf;\n  scale: 1;\n  transition: background-color 250ms linear;\n  transition: scale 250ms linear;\n\n  font-size: 12px;\n  &:hover {\n    background-color: #42b9d4;\n    scale: 1.1;\n  }\n`;\nexport const Icon = styled.div`\n  position: absolute;\n  top: 0;\n  left: -28px;\n  width: 30px;\n`;\nexport const Label = styled.p`\n  font-size: 14px;\n`;\n","import { useDispatch } from 'react-redux';\nimport { useState } from 'react';\nimport { register } from 'redux/auth/service';\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { MdOutlineVisibility, MdOutlineVisibilityOff } from 'react-icons/md';\nimport { BsFillPersonFill } from 'react-icons/bs';\nimport { HiOutlineMail } from 'react-icons/hi';\nimport { BsKey } from 'react-icons/bs';\n\nimport {\n  SubmitBtn,\n  VisibleBtn,\n  LableInput,\n  LableInputWrapper,\n  Form,\n  SectionFormInput,\n  Input,\n  Icon,\n  Label,\n} from './RegisterForm.styled';\n\nexport const RegisterForm = () => {\n  const dispatch = useDispatch();\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [passVerification, setPassVerification] = useState('');\n\n  const [isVisiblePassword, setIsVisiblePassword] = useState(false);\n  const [isVisiblePassVerification, setIsVisiblePassVerification] =\n    useState(false);\n  const handleVisiblePassword = () => setIsVisiblePassword(visible => !visible);\n  const handleVisiblePassVerification = () =>\n    setIsVisiblePassVerification(visible => !visible);\n\n  const handleInput = event => {\n    const e = event.currentTarget.name;\n    const value = event.currentTarget.value;\n    switch (e) {\n      case 'name':\n        setName(value);\n        break;\n      case 'email':\n        setEmail(value);\n        break;\n      case 'password':\n        setPassword(value);\n        break;\n      case 'confirm':\n        setPassVerification(value);\n        break;\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (\n      name === '' ||\n      email === '' ||\n      password === '' ||\n      passVerification === ''\n    ) {\n      toast.error('All fields must be filled');\n      return;\n    }\n    if (password.length < 8) {\n      toast.error('The password must contain at least 8 characters');\n      return;\n    }\n    if (password !== passVerification) {\n      toast.error('Passwords do not match');\n      return;\n    }\n    const form = e.currentTarget;\n    dispatch(\n      register({\n        name,\n        email,\n        password,\n      })\n    );\n    form.reset();\n  };\n\n  return (\n    <SectionFormInput>\n      <Form onSubmit={handleSubmit} autoComplete=\"off\">\n        <LableInput>\n          <Label>username</Label>\n          <LableInputWrapper>\n            <Icon>\n              <BsFillPersonFill\n                style={{\n                  width: '24',\n                  height: '24',\n                  verticalAlign: 'middle',\n                }}\n              />\n            </Icon>\n            <Input type=\"text\" name=\"name\" onChange={handleInput} />\n          </LableInputWrapper>\n        </LableInput>\n        <LableInput>\n          <Label>email</Label>\n          <LableInputWrapper>\n            <Icon>\n              <HiOutlineMail\n                style={{\n                  width: '24',\n                  height: '24',\n                  verticalAlign: 'middle',\n                }}\n              />\n            </Icon>\n            <Input type=\"email\" name=\"email\" onChange={handleInput} />\n          </LableInputWrapper>\n        </LableInput>\n        <LableInput>\n          <Label>password</Label>\n          <LableInputWrapper>\n            <Icon>\n              <BsKey\n                style={{\n                  width: '24',\n                  height: '24',\n                  verticalAlign: 'middle',\n                }}\n              />\n            </Icon>\n            <Input\n              type={isVisiblePassword ? 'text' : 'password'}\n              name=\"password\"\n              onChange={handleInput}\n            />\n            <VisibleBtn type=\"button\" onClick={handleVisiblePassword}>\n              {isVisiblePassword ? (\n                <MdOutlineVisibility\n                  style={{\n                    width: '20',\n                    height: '20',\n                    verticalAlign: 'middle',\n                  }}\n                />\n              ) : (\n                <MdOutlineVisibilityOff\n                  style={{\n                    width: '20',\n                    height: '20',\n                    verticalAlign: 'middle',\n                  }}\n                />\n              )}\n            </VisibleBtn>\n          </LableInputWrapper>\n        </LableInput>\n        <LableInput>\n          <Label>confirm password</Label>\n          <LableInputWrapper>\n            <Icon>\n              <BsKey\n                style={{\n                  width: '24',\n                  height: '24',\n                  verticalAlign: 'middle',\n                }}\n              />\n            </Icon>\n            <Input\n              type={isVisiblePassVerification ? 'text' : 'password'}\n              name=\"confirm\"\n              onChange={handleInput}\n            />\n            <VisibleBtn type=\"button\" onClick={handleVisiblePassVerification}>\n              {isVisiblePassword ? (\n                <MdOutlineVisibility\n                  style={{\n                    width: '20',\n                    height: '20',\n                    verticalAlign: 'middle',\n                  }}\n                />\n              ) : (\n                <MdOutlineVisibilityOff\n                  style={{\n                    width: '20',\n                    height: '20',\n                    verticalAlign: 'middle',\n                  }}\n                />\n              )}\n            </VisibleBtn>\n          </LableInputWrapper>\n        </LableInput>\n        <SubmitBtn type=\"submit\">Register</SubmitBtn>\n      </Form>\n    </SectionFormInput>\n  );\n};\n","import { RegisterForm } from '../components/RegisterForm/RegisterForm';\nimport { Section } from './pages.styled';\n\nexport default function Register() {\n  return (\n    <Section>\n      <div>\n        <title>Registration</title>\n      </div>\n      <RegisterForm />\n    </Section>\n  );\n}\n","import styled from 'styled-components';\n\nexport const Section = styled.section`\n  max-width: 450px;\n  padding: 20px;\n\n  border-left: 2px solid #53aecf;\n  border-right: 2px solid #53aecf;\n  border-bottom: 2px solid #53aecf;\n`;\n\nexport const Wellcome = styled.h1`\n  padding: 10px;\n  text-align: center;\n  background-color: #ebdf02;\n  border-radius: 4px;\n`;\n"],"names":["SectionFormInput","styled","Form","LableInput","LableInputWrapper","Input","SubmitBtn","VisibleBtn","Icon","Label","RegisterForm","dispatch","useDispatch","useState","name","setName","email","setEmail","password","setPassword","passVerification","setPassVerification","isVisiblePassword","setIsVisiblePassword","isVisiblePassVerification","setIsVisiblePassVerification","handleInput","event","e","currentTarget","value","onSubmit","preventDefault","length","toast","form","register","reset","autoComplete","style","width","height","verticalAlign","type","onChange","onClick","visible","Register","Section","Wellcome"],"sourceRoot":""}