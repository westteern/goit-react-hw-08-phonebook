{"version":3,"file":"static/js/628.910fad56.chunk.js","mappings":"mSAEaA,EAAmBC,EAAAA,GAAAA,IAAH,oJAQhBC,EAAOD,EAAAA,GAAAA,KAAH,kFAMJE,EAAaF,EAAAA,GAAAA,MAAH,0FAKVG,EAAoBH,EAAAA,GAAAA,IAAH,iEAKjBI,EAAQJ,EAAAA,GAAAA,MAAH,uHAOLK,EAAYL,EAAAA,GAAAA,OAAH,sZAqBTM,EAAaN,EAAAA,GAAAA,OAAH,8TAgBVO,EAAOP,EAAAA,GAAAA,IAAH,0FAMJQ,EAAQR,EAAAA,GAAAA,EAAH,4C,SCzDLS,EAAY,WACvB,OAA0BC,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAAgCF,EAAAA,EAAAA,UAAS,IAAzC,eAAOG,EAAP,KAAiBC,EAAjB,KACA,GAAkDJ,EAAAA,EAAAA,WAAS,GAA3D,eAAOK,EAAP,KAA0BC,EAA1B,KAEMC,GAAWC,EAAAA,EAAAA,MAIXC,EAAc,SAAAC,GAClB,IAAMC,EAAID,EAAME,cAAcC,KACxBC,EAAQJ,EAAME,cAAcE,MAClC,OAAQH,GACN,IAAK,QACHT,EAASY,GACT,MACF,IAAK,WACHV,EAAYU,GACZ,MACF,QACE,OAEL,EAcD,OACE,SAACzB,EAAD,WACE,UAACE,EAAD,CAAMwB,SAdW,SAAAJ,GACnBA,EAAEK,iBACF,IAAMC,EAAON,EAAEC,cACfL,GACEW,EAAAA,EAAAA,IAAM,CACJjB,MAAAA,EACAE,SAAAA,KAGJc,EAAKE,OACN,EAIiCC,aAAa,MAA3C,WACE,UAAC5B,EAAD,YACE,SAACM,EAAD,qBACA,UAACL,EAAD,YACE,SAACI,EAAD,WACE,SAAC,MAAD,CACEwB,MAAO,CACLC,MAAO,KACPC,OAAQ,KACRC,cAAe,eAIrB,SAAC9B,EAAD,CAAO+B,KAAK,QAAQZ,KAAK,QAAQa,SAAUjB,WAG/C,UAACjB,EAAD,YACE,SAACM,EAAD,wBACA,UAACL,EAAD,YACE,SAACI,EAAD,WACE,SAAC,MAAD,CACEwB,MAAO,CACLC,MAAO,KACPC,OAAQ,KACRC,cAAe,eAIrB,SAAC9B,EAAD,CACE+B,KAAMpB,EAAoB,OAAS,WACnCQ,KAAK,WACLa,SAAUjB,KAEZ,SAACb,EAAD,CAAY6B,KAAK,SAASE,QAhEN,kBAAMrB,GAAqB,SAAAsB,GAAO,OAAKA,CAAL,GAAlC,EAgEpB,SACGvB,GACC,SAAC,MAAD,CACEgB,MAAO,CACLC,MAAO,KACPC,OAAQ,KACRC,cAAe,aAInB,SAAC,MAAD,CACEH,MAAO,CACLC,MAAO,KACPC,OAAQ,KACRC,cAAe,qBAO3B,SAAC7B,EAAD,CAAW8B,KAAK,SAAhB,wBAIP,E,UChHc,SAASI,IACtB,OACE,UAAC,IAAD,YACE,0BACE,wCAEF,SAAC9B,EAAD,MAGL,C,yGCVY+B,EAAUxC,EAAAA,GAAAA,QAAH,6KASPyC,EAAWzC,EAAAA,GAAAA,GAAH,qH","sources":["components/LoginForm/LoginForm.styled.js","components/LoginForm/LoginForm.jsx","pages/Login.jsx","pages/pages.styled.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const SectionFormInput = styled.div`\n  padding-top: 20px;\n  padding-bottom: 20px;\n  background-color: #ebdf02;\n  border-radius: 4px;\n  font-family: Roboto;\n`;\n\nexport const Form = styled.form`\n  display: flex;\n  flex-direction: column;\n  gap: 8px;\n`;\n\nexport const LableInput = styled.label`\n  max-width: 200px;\n  margin-left: auto;\n  margin-right: auto;\n`;\nexport const LableInputWrapper = styled.div`\n  position: relative;\n  display: flex;\n`;\n\nexport const Input = styled.input`\n  &:focus {\n    outline: none;\n    border: 2px solid #53aecf;\n    border-radius: 2px;\n  }\n`;\nexport const SubmitBtn = styled.button`\n  width: 100px;\n  margin-left: auto;\n  margin-right: auto;\n  padding-top: 5px;\n  padding-bottom: 5px;\n\n  border: none;\n  border-radius: 4px;\n  cursor: pointer;\n  background-color: #53aecf;\n  scale: 1;\n  transition: background-color 250ms linear;\n  transition: scale 250ms linear;\n\n  font-size: 12px;\n  &:hover {\n    background-color: #42b9d4;\n    scale: 1.1;\n  }\n`;\nexport const VisibleBtn = styled.button`\n  margin-left: 2px;\n  border: none;\n  border-radius: 4px;\n  cursor: pointer;\n  background-color: #53aecf;\n  scale: 1;\n  transition: background-color 250ms linear;\n  transition: scale 250ms linear;\n\n  font-size: 12px;\n  &:hover {\n    background-color: #42b9d4;\n    scale: 1.1;\n  }\n`;\nexport const Icon = styled.div`\n  position: absolute;\n  top: 0;\n  left: -28px;\n  width: 30px;\n`;\nexport const Label = styled.p`\n  font-size: 14px;\n`;\n","import { useDispatch } from 'react-redux';\nimport { useState } from 'react';\nimport { logIn } from 'redux/auth/service';\nimport { MdOutlineVisibility, MdOutlineVisibilityOff } from 'react-icons/md';\nimport { BsKey } from 'react-icons/bs';\nimport { HiOutlineMail } from 'react-icons/hi';\n\nimport {\n  SubmitBtn,\n  VisibleBtn,\n  LableInput,\n  LableInputWrapper,\n  Form,\n  SectionFormInput,\n  Input,\n  Icon,\n  Label,\n} from './LoginForm.styled';\n\nexport const LoginForm = () => {\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [isVisiblePassword, setIsVisiblePassword] = useState(false);\n\n  const dispatch = useDispatch();\n\n  const handleVisiblePassword = () => setIsVisiblePassword(visible => !visible);\n\n  const handleInput = event => {\n    const e = event.currentTarget.name;\n    const value = event.currentTarget.value;\n    switch (e) {\n      case 'email':\n        setEmail(value);\n        break;\n      case 'password':\n        setPassword(value);\n        break;\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const form = e.currentTarget;\n    dispatch(\n      logIn({\n        email,\n        password,\n      })\n    );\n    form.reset();\n  };\n\n  return (\n    <SectionFormInput>\n      <Form onSubmit={handleSubmit} autoComplete=\"off\">\n        <LableInput>\n          <Label>email</Label>\n          <LableInputWrapper>\n            <Icon>\n              <HiOutlineMail\n                style={{\n                  width: '24',\n                  height: '24',\n                  verticalAlign: 'middle',\n                }}\n              />\n            </Icon>\n            <Input type=\"email\" name=\"email\" onChange={handleInput} />\n          </LableInputWrapper>\n        </LableInput>\n        <LableInput>\n          <Label>password</Label>\n          <LableInputWrapper>\n            <Icon>\n              <BsKey\n                style={{\n                  width: '24',\n                  height: '24',\n                  verticalAlign: 'middle',\n                }}\n              />\n            </Icon>\n            <Input\n              type={isVisiblePassword ? 'text' : 'password'}\n              name=\"password\"\n              onChange={handleInput}\n            />\n            <VisibleBtn type=\"button\" onClick={handleVisiblePassword}>\n              {isVisiblePassword ? (\n                <MdOutlineVisibility\n                  style={{\n                    width: '20',\n                    height: '20',\n                    verticalAlign: 'middle',\n                  }}\n                />\n              ) : (\n                <MdOutlineVisibilityOff\n                  style={{\n                    width: '20',\n                    height: '20',\n                    verticalAlign: 'middle',\n                  }}\n                />\n              )}\n            </VisibleBtn>\n          </LableInputWrapper>\n        </LableInput>\n        <SubmitBtn type=\"submit\">Log In</SubmitBtn>\n      </Form>\n    </SectionFormInput>\n  );\n};\n","import { LoginForm } from '../components/LoginForm/LoginForm';\nimport { Section } from './pages.styled';\n\nexport default function Login() {\n  return (\n    <Section>\n      <div>\n        <title>Login</title>\n      </div>\n      <LoginForm />\n    </Section>\n  );\n}\n","import styled from 'styled-components';\n\nexport const Section = styled.section`\n  max-width: 450px;\n  padding: 20px;\n\n  border-left: 2px solid #53aecf;\n  border-right: 2px solid #53aecf;\n  border-bottom: 2px solid #53aecf;\n`;\n\nexport const Wellcome = styled.h1`\n  padding: 10px;\n  text-align: center;\n  background-color: #ebdf02;\n  border-radius: 4px;\n`;\n"],"names":["SectionFormInput","styled","Form","LableInput","LableInputWrapper","Input","SubmitBtn","VisibleBtn","Icon","Label","LoginForm","useState","email","setEmail","password","setPassword","isVisiblePassword","setIsVisiblePassword","dispatch","useDispatch","handleInput","event","e","currentTarget","name","value","onSubmit","preventDefault","form","logIn","reset","autoComplete","style","width","height","verticalAlign","type","onChange","onClick","visible","Login","Section","Wellcome"],"sourceRoot":""}